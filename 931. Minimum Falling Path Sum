// Goldman Sachs Google

public class Solution {
    public int MinFallingPathSum(int[][] matrix) {
        int n = matrix.Length;
        int m = matrix[0].Length;
        int[,] dp = new int[n, m];
        int min = (int)1e9;
        
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < m; j++)
                dp[i, j] = -1;
        }
        
        for(int i = 0; i < m; i++)
            min = Math.Min(min, Solve(n - 1, i, matrix, dp));
        
        return min;
    }
    
    private int Solve(int i, int j, int[][] matrix, int[,] dp)
    {
        if(j < 0 || j >= matrix[0].Length) return (int)1e9;
        if(i == 0) return matrix[0][j];
        
        if(dp[i, j] != -1) return dp[i, j];
        int up = matrix[i][j] + Solve(i - 1, j, matrix, dp);
        int upl = matrix[i][j] + Solve(i - 1, j - 1, matrix, dp);
        int upr = matrix[i][j] + Solve(i - 1, j + 1, matrix, dp);
        
        return dp[i, j] = Math.Min(up, Math.Min(upl, upr));
    } 
}
