// Amazon D-E-Shaw Microsoft Morgan Stanley OYO Rooms Google Piramle Finance

public class Solution {
    public int MaxProduct(int[] nums) {
        int n = nums.Length;
        int min = nums[0], max = nums[0], ans = nums[0];
        for(int i = 1; i < n; i++)
        {
            // if num[i] is negative, when it is multiplied by a greater number
            // multiplication becomes smaller number so we have to swap max and min
            // to get max number after multiplication with negative number
            if(nums[i] < 0)
            {
                int temp = min;
                min = max;
                max = temp;
            }
            // largest product is decided as maximum of (continuation of multiplication
            // of previous numbers and current number) and current number
            max = Math.Max(nums[i], max * nums[i]);
            min = Math.Min(nums[i], min * nums[i]);
            ans = Math.Max(ans, max);
        }
        return ans;
    }
}
