public class BSTIterator {
    private Stack<TreeNode> myStack = new Stack<TreeNode>();
    public BSTIterator(TreeNode root) {
        PushAll(root);
    }
    
    public int Next() {
        TreeNode tempNode = myStack.Pop();
        PushAll(tempNode.right);
        return tempNode.val;
    }
    
    public bool HasNext() {
        return myStack.Count > 0;
    }
    
    private void PushAll(TreeNode node) 
    {
        while(node != null)
        {
            myStack.Push(node);
            node = node.left;
        }
    }
}

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator obj = new BSTIterator(root);
 * int param_1 = obj.Next();
 * bool param_2 = obj.HasNext();
 */
