1st Approach
---------------

public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        int n = matrix.Length, m = matrix[0].Length;
        int i = 0, j = m - 1;
        while(i<n && j>=0)
        {
            if(matrix[i][j] == target)
                return true;
            else if(matrix[i][j] > target)
                j--;
            else
                i++;
        }
        return false;
    }
}

2nd Approach
--------------

public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        int n = matrix.Length;
        int m = matrix[0].Length;
        int low = 0, high = m*n - 1;
        while(low <= high)
        {
            int mid = (low + high) / 2;
            if(matrix[mid/m][mid%m] == target)
                return true;
            else if(matrix[mid/m][mid%m] > target)
                high = mid -1;
            else
                low = mid + 1;
        }
        return false;
    }
}
