With Auxiliary Space
----------------------

public class Solution {
    public int[] FindErrorNums(int[] nums) {
        int n = nums.Length;
        int[] aux = new int[n];
        
        int repeat = 0, missing = 0;
        foreach(int num in nums)
            aux[num - 1]++;
        
        for(int i = 0; i < n; i++)
        {
            if(aux[i] > 1)
                repeat = i + 1;
            else if(aux[i] == 0)
                missing = i + 1;
        }
        return new int[]{repeat, missing};
    }
}

Without Auxiliary Space
-------------------------

public class Solution {
    public int[] FindErrorNums(int[] nums) {
        int n = nums.Length;
        
        int repeat = 0, missing = 0;
        for(int i = 0; i < n; i++)
        {
            if(nums[Math.Abs(nums[i]) - 1] < 0)
                repeat = Math.Abs(nums[i]);
            else
                nums[Math.Abs(nums[i]) - 1] = -nums[Math.Abs(nums[i]) - 1];
        }
        
        for(int i = 0; i < n; i++)
        {
            if(nums[i] > 0)
                missing = i + 1;
        }
        return new int[]{repeat, missing};
    }
}
