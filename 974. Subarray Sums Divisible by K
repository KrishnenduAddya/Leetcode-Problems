// Amazon Expedia Twilio Yandex

public class Solution {
    public int SubarraysDivByK(int[] nums, int k) {
        int count = 0;
        int currSum = 0;
        Dictionary<int, int> map = new Dictionary<int,int>(5);
        map.Add(0,1);
        for(int i = 0; i < nums.Length; i++)
        {
            // Calculate cumulative sum
            currSum = currSum + nums[i];
            // Calculate remainder of cumulative sum
            int rem = currSum % k;
            if(rem < 0)
                rem = rem + k;
            
            // If remainder repeats means between the same remainder appeared before and now the subarray is divisible by K 
            if(map.ContainsKey(rem))
            {
                count = count + map[rem];
                map[rem]++;
            }
            else
                map.Add(rem, 1);
        }
        return count;
    }
}
