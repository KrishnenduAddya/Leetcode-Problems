public class Solution {
    public int[] NextLargerNodes(ListNode head) {
        List<int> list = new List<int>();
        
        ListNode curr = head;
        while(curr != null)
        {
            list.Add(curr.val);
            curr = curr.next;
        }
        
        int n = list.Count;
        int[] result = new int[n];
        Stack<int> stack = new Stack<int>();
        for(int i = 0; i < n; i++) 
        {
            // For element greater than element for top of stack pop top and fill result
            while(stack.Count > 0 && list[i] > list[stack.Peek()])
            {
                int index = stack.Pop();
                result[index] = list[i];
            }
            // Smaller or equal element can be pushed over the top of the array
            stack.Push(i);
        }
        return result;
    }
}
