1st Approach
--------------
// Shift each bit to right most bit and perform bitwise and operation with 1
public class Solution {
    public int HammingWeight(uint n) {
        uint ans = 0;
        while(n != 0)
        {
            ans = ans + (n & 1);
            n = n >> 1;
        }
    	  return (int)ans;
    }
}


2nd Approach
--------------

// Change the first set bit from right to 0
public class Solution {
    public int HammingWeight(uint n) {
        int ans = 0;
        while(n != 0)
        {
            n = n & (n - 1);
            ans = ans + 1;
        }
    	  return ans;
    }
}
