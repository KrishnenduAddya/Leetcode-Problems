// Amazon Google Microsoft

public class Solution {
    public int LongestCommonSubsequence(string text1, string text2) {
        int n1 = text1.Length, n2 = text2.Length;
        int[,] dp = new int[n1, n2];
        for(int i = 0; i < n1; i++)
            for(int j = 0; j < n2; j++)
                dp[i, j] = -1;
        
        return Find(text1, text2, n1 - 1, n2 - 1, dp);
    }
    
    private int Find(string s1, string s2, int i, int j, int[,] dp)
    {
        if(i < 0 || j < 0)
            return 0;
        if(dp[i, j] != -1) return dp[i, j];
        
        if(s1[i] == s2[j])
            return dp[i, j] = 1 + Find(s1, s2, i - 1, j - 1, dp);
        else
            return dp[i, j] = Math.Max(Find(s1, s2, i - 1, j, dp), Find(s1, s2, i, j - 1, dp));
    }
}
