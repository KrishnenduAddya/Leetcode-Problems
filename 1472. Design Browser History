Using DLL
----------

public class Node
{
    public string url;
    public Node next, prev;
    public Node(string url) 
    {
        this.url = url;
        next = null;
        prev = null;
    }
}
public class BrowserHistory {
    Node curr;
    public BrowserHistory(string homepage) {
        curr = new Node(homepage);
    }
    
    public void Visit(string url) {
        Node node = new Node(url);
        curr.next = node;
        node.prev = curr;
        curr = node;
    }
    
    public string Back(int steps) {
        while (curr.prev != null && steps-- > 0)
            curr = curr.prev;
        return curr.url;
    }
    
    public string Forward(int steps) {
        while (curr.next != null && steps-- > 0)
            curr = curr.next;
        return curr.url;
    }
}


Using Stack
------------

public class BrowserHistory {
    Stack<String> backward = new Stack<String>();
    Stack<String> forward = new Stack<String>();
    
    public BrowserHistory(string homepage) {
        backward.Push(homepage);
        forward = new Stack<String>();
    }
    
    public void Visit(string url) {
        backward.Push(url);
        forward = new Stack<String>(); 
    }
    
    public string Back(int steps) {
        while(steps > 0 && backward.Count > 1) 
        {
            forward.Push(backward.Peek());
            backward.Pop();
            steps--;
        }
        return backward.Peek();
    }
    
    public string Forward(int steps) {
        while(steps > 0 && forward.Count > 0) 
        {
            backward.Push(forward.Peek());
            forward.Pop();
            steps--;
        }
        return backward.Peek();
    }
}
